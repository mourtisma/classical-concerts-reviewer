//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "example_many_to_many")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::example_sea_orm_with_relation::Entity> for Entity {
    fn to() -> RelationDef {
        super::example_sea_orm_with_relation_example_many_to_many::Relation::ExampleSeaOrmWithRelation.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::example_sea_orm_with_relation_example_many_to_many::Relation::ExampleManyToMany.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
